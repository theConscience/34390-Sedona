/* layout column classes */

@mixin generate_columns($cols_count) {
  @for $i from 1 to $cols_count+1 {
    @for $j from 1 to $i {
      @if ( $i%$j != 0 or $i == 1 or $j == 1 ) and ($i%2+$j%2 != 0)  {
        [class*='l-col-#{$j}-#{$i}'] {
          width: 100%/$i*$j;
        }
      }
    }
  }
}


/* block width classes */

@mixin generate_widths($cols_count) {
  @for $i from 1 to $cols_count+1 {
    @for $j from 1 to $i {
      @if ( $i%$j != 0 or $i == 1 or $j == 1 ) and ($i%2+$j%2 != 0)  {
        [class|='width-#{$j}-#{$i}'] {
          width: 100%/$i*$j;
        }
      }
    }
  }
}

/* layout column moves */

@mixin generate_column_move($cols_count) {
  @for $i from 0 to $cols_count+1 {
    [class*='l-col-pull-#{$i}'] {
      @if ($i != 0) {
        right: 100%/$cols_count*$i;
      } @else {
        right: auto;
      }
    }
    [class*='l-col-push-#{$i}'] {
      @if ($i != 0) {
        left: 100%/$cols_count*$i;
      } @else {
        left: auto;
      }
    }
    [class*='l-col-offset-#{$i}'] {
      @if ($i != 0) {
        margin-left: 100%/$cols_count*$i;
      } @else {
        margin-left: 0;
      }
    }
  }
}


/* generate media queries */

@mixin generate_media($viewports) {
  @each $key,$val in $viewports {
    @media screen and (max-width: $val) {
      [class*='#{$key}'] {
        width: 100%;
        margin-left: 0;
        text-align: inherit;
        left: 0;
        right: 0;
        float: none !important;
      }
    }
  }
}


/* apply options to some media query */

@mixin apply-to($ltgt, $window-size1, $window-size2: none, $orientation: none, $type: none) {
    $extrema1: null;
    $extrema2: null;
    @if $ltgt == less-than {
        $extrema1: max;
        @if $window-size2 {
            $extrema2: min;
        }
    }
    @if $ltgt == greater-than {
        $extrema1: min;
        @if $window-size2 {
            $extrema2: max;
        }
    }
    @if $type != none {
        $extrema1: #{$extrema1}-#{$type};
        @if $extrema2 {
            $extrema2: #{$extrema2}-#{$type};
        }
    }
    @if  $window-size2 == none {
        @if  $orientation == none {
            @media only screen and (#{$extrema1}-width: $window-size1) {
                @content;
            }
        } @else {
            @media only screen and (#{$extrema1}-width: $window-size1) and (orientation: $orientation) {
                @content;
            }
        }

    } @else  {
        @if  $orientation == none {
            @media only screen and (#{$extrema1}-width: $window-size1) and (#{$extrema2}-width: $window-size2) {
                @content;
            }
        } @else {
            @media only screen and (#{$extrema1}-width: $window-size1) and (#{$extrema2}-width: $window-size2) and (orientation: $orientation) {
                @content;
            }
        }
    }
}


/* media queries for retina */

@mixin retinize-for($ltgt, $retina-resolution1, $retina-resolution2: none, $orientation: none) {
    $extrema1: null;
    $extrema2: null;
    @if $ltgt == less-than {
        $extrema1: max;
        @if $retina-resolution2 {
            $extrema2: min;
        }
    }
    @if $ltgt == greater-than {
        $extrema1: min;
        @if $retina-resolution2 {
            $extrema2: max;
        }
    }
    @if  $retina-resolution2 == none {
        @if  $orientation == none {
            @media (#{$extrema1}-resolution: $retina-resolution1) {
                @content;
            }
        } @else {
            @media (#{$extrema1}-resolution: $retina-resolution1) and (orientation: $orientation) {
                @content;
            }
        }

    } @else  {
        @if  $orientation == none {
            @media (#{$extrema1}-resolution: $retina-resolution1) and (#{$extrema2}-resolution: $retina-resolution2) {
                @content;
            }
        } @else {
            @media (#{$extrema1}-resolution: $retina-resolution1) and (#{$extrema2}-resolution: $retina-resolution2) and (orientation: $orientation) {
                @content;
            }
        }
    }
}
